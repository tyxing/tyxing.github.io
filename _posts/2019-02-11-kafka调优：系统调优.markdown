---
layout: post
title:  "kafka调优：系统调优"
date:   2019-02-11 20:52:06 +0800
categories: jekyll update
---


*该文章为原创文章，转载请注明出处https://tyxing.github.io/*


一些公司有单独的服务器用来部署kafka的broker。

对于kafka专用服务器来说，可以根据kafka的使用情形对linux系统参数进行适当的调整。


### 虚拟内存篇：

linux的虚拟内存本身就会随着系统的使用进行动态调整。对于linux系统来说，内存交换不是必须的。它是用来防止操作系统因为内存不足突然终止进程。

对于kafka来说，可以对交换分区，和内存脏页进行特定化的设置。

类似于kafka这种依赖吞吐量的程序来说，要尽量避免内存交换。内存页和磁盘的交换，有很大的性能影响。

比较常用的避免内存交换方法是不设置交换分区。

vm.swappiness参数可以调小。比如1.

该参数网上有很多的相关说明了，越大使用内存交换越多，默认60。在这里只强调一点。

设为1的原因是使它进行最少量的内存交换，而不是设为0（有些版本的linux，设为0后任何时候都禁止内存交换）


脏页：

kafka依赖快速I/O，因此调整脏页刷盘的方式也是一个优化点。

调整vm. dirty_ ratio的值和vm.dirty_ background_ ratio的值。

前者是同步刷脏页，会阻塞程序，后者是后台刷脏页。

大概前者设60~80， 后者设5即可。


### 网络篇

kafka一般线上是大流量占用高带宽的情形。

默认情况下，系统并没有对大流量做优化。

socket缓冲区：

读写缓冲区默认参数：
net.core.wmem_default和net.core.rmem_default，
合理的值是131072即128kb

读写缓冲区最大值：
net.core.wmem_max和net.core.rmem_max，
合理的值是2097152即2MB。

net.ipv4.tcp_window_scaling设为1，启用TCP时间窗扩展，可以提升客户端传输数据的效率，传输的数据可以在服务器端进行缓冲。

把net.ipv4.tcp_max_syn_backlog设为比默认值1024更大的值，可以接受更多的并发连接。

把net.core.netdev_max_backlog设为比默认值1000更大的值，有助于应对网络流量的爆发，允许更多数据包排队等待内核处理。
